{
  "module_name": "module_150.py",
  "path": "data/modules/module_150.py",
  "num_functions": 1,
  "num_classes": 0,
  "imports": [],
  "functions": [
    {
      "name": "sorted_list_sum",
      "args": [
        {
          "name": "lst",
          "type": null
        }
      ],
      "returns": null,
      "docstring": "Write a function that accepts a list of strings as a parameter,\ndeletes the strings that have odd lengths from it,\nand returns the resulted list with a sorted order,\nThe list is always a list of strings and never an array of numbers,\nand it may contain duplicates.\nThe order of the list should be ascending by length of each word, and you\nshould return the list sorted by that rule.\nIf two words have the same length, sort the list alphabetically.\nThe function should return a list of strings in sorted order.\nYou may assume that all words will have the same length.\nFor example:\nassert list_sort([\"aa\", \"a\", \"aaa\"]) => [\"aa\"]\nassert list_sort([\"ab\", \"a\", \"aaa\", \"cd\"]) => [\"ab\", \"cd\"]",
      "start_line": 2,
      "end_line": 22
    }
  ]
}