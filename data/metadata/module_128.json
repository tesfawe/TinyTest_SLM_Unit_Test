{
  "module_name": "module_128.py",
  "path": "data/modules/module_128.py",
  "num_functions": 2,
  "num_classes": 0,
  "imports": [],
  "functions": [
    {
      "name": "intersection",
      "args": [
        {
          "name": "interval1",
          "type": null
        },
        {
          "name": "interval2",
          "type": null
        }
      ],
      "returns": null,
      "docstring": "You are given two intervals,\nwhere each interval is a pair of integers. For example, interval = (start, end) = (1, 2).\nThe given intervals are closed which means that the interval (start, end)\nincludes both start and end.\nFor each given interval, it is assumed that its start is less or equal its end.\nYour task is to determine whether the length of intersection of these two \nintervals is a prime number.\nExample, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\nwhich its length is 1, which not a prime number.\nIf the length of the intersection is a prime number, return \"YES\",\notherwise, return \"NO\".\nIf the two intervals don't intersect, return \"NO\".\n\n\n[input/output] samples:\nintersection((1, 2), (2, 3)) ==> \"NO\"\nintersection((-1, 1), (0, 4)) ==> \"NO\"\nintersection((-3, -1), (-5, 5)) ==> \"YES\"",
      "start_line": 2,
      "end_line": 37
    },
    {
      "name": "is_prime",
      "args": [
        {
          "name": "num",
          "type": null
        }
      ],
      "returns": null,
      "docstring": "",
      "start_line": 22,
      "end_line": 30
    }
  ]
}