{
  "module_name": "module_154.py",
  "path": "data/modules/module_154.py",
  "num_functions": 1,
  "num_classes": 0,
  "imports": [],
  "functions": [
    {
      "name": "Strongest_Extension",
      "args": [
        {
          "name": "class_name",
          "type": null
        },
        {
          "name": "extensions",
          "type": null
        }
      ],
      "returns": null,
      "docstring": "You will be given the name of a class (a string) and a list of extensions.\nThe extensions are to be used to load additional classes to the class. The\nstrength of the extension is as follows: Let CAP be the number of the uppercase\nletters in the extension's name, and let SM be the number of lowercase letters \nin the extension's name, the strength is given by the fraction CAP - SM. \nYou should find the strongest extension and return a string in this \nformat: ClassName.StrongestExtensionName.\nIf there are two or more extensions with the same strength, you should\nchoose the one that comes first in the list.\nFor example, if you are given \"Slices\" as the class and a list of the\nextensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\nreturn 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension \n(its strength is -1).\nExample:\nfor Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'",
      "start_line": 2,
      "end_line": 28
    }
  ]
}